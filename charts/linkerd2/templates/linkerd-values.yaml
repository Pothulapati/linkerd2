{{- /*
  This config-map is used to store the configuration of add-ons, which is useful during upgrades.  
  As fields like global, etc are added by helm and we would not want them in the data, second level fields should be used 
  instead of directly specifying the add-on field.
*/ -}}
{{- $dupValues := .Values -}}
{{- range $key, $value := $dupValues -}}
  {{- if kindIs "map" $value -}}
    {{- if and (hasKey $value "global") (ne $key "configs" ) -}}
      {{- $dupValues := set $dupValues $key (unset $value "global") -}}
    {{- end -}}
    {{- if hasKey $value "partials" -}}
      {{- $dupValues := set $dupValues $key (unset $value "partials") -}}
    {{- end -}}
  {{- end -}}
{{- end -}}
---
###
### linkerd values
###
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-values
  namespace: {{.Values.global.namespace}}
  labels:
    {{.Values.global.controllerNamespaceLabel}}: {{.Values.global.namespace}}
  annotations:
    {{.Values.global.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.global.linkerdVersion) .Values.global.cliVersion}}
data:
  values: |-
    global:
      prometheusUrl: {{.Values.global.prometheusUrl}}
    {{- if (.Values.tracing.enabled) }}
    tracing:
    {{- toYaml .Values.tracing | trim | nindent 6}}
    {{- end -}}
    {{- if (.Values.prometheus.enabled) }}
    prometheus:
    {{- toYaml .Values.prometheus | trim | nindent 6}}
    {{- end}}
